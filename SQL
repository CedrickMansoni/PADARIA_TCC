-- Criação das tabelas para o sistema de padaria

-- Tabela de Categoria
CREATE TABLE t_01_categoria (
    id SERIAL PRIMARY KEY,
    descricao VARCHAR(100) NOT NULL UNIQUE
);
-- Inserir categorias de funcionários
INSERT INTO t_01_categoria (descricao) VALUES ('Administrador'),('Gerente'),('Padeiro'),('Caixa'),('Pessoa Juridica'),('Pessoa Física');

-- Tabela de Funcionário
CREATE TABLE t_02_funcionario (
    id SERIAL PRIMARY KEY,
    id_categoria INTEGER REFERENCES t_01_categoria(id),
    nome_completo VARCHAR(100) NOT NULL,
    senha TEXT NOT NULL,
    avatar VARCHAR NOT NULL DEFAULT 'user',
    estado VARCHAR(30) NOT NULL DEFAULT 'Offline'
);
insert into t_02_funcionario (
    id_categoria, 
    nome_completo, 
    senha, 
    avatar, 
    estado
  )
values
  ( 
    1, 
    'Admin', 
    '8AE3028BF6A6737A45838367FC573CC50B2CF250C6657E0F9EBC02229D1A29446170B3CF8E129E4E8E4F8DFA180322FBA07E02280DB587FBC0DD47B9ED409A2D', 
    'user', 
    'Activo'
  );

-- Tabela de Cliente
CREATE TABLE t_03_cliente (
    id SERIAL PRIMARY KEY,
    id_categoria INTEGER REFERENCES t_01_categoria(id),
    nome VARCHAR(100) NOT NULL,
    senha TEXT NOT NULL,
    nif VARCHAR(20) UNIQUE,
    estado VARCHAR(20) NOT NULL DEFAULT 'Offline'
);
INSERT INTO t_03_cliente (id_categoria, nome, senha, nif, estado)
VALUES (6, 'Consumidor Final', 'senha123', '000000000', 'Inactivo');

-- Tabela de Telefone
CREATE TABLE t_04_telefone (
    id SERIAL PRIMARY KEY,
    id_funcionario INTEGER REFERENCES t_02_funcionario(id),
    id_cliente INTEGER REFERENCES t_03_cliente(id),
    telefone VARCHAR(20) NOT NULL UNIQUE,
    CONSTRAINT chk_telefone_owner CHECK ((id_funcionario IS NOT NULL AND id_cliente IS NULL) OR (id_funcionario IS NULL AND id_cliente IS NOT NULL))
);

INSERT INTO t_04_telefone (id_funcionario, id_cliente, telefone) VALUES (1, NULL, '951510682'),(NULL, 1, '923000000');

-- Tabela de Categoria Produto
CREATE TABLE t_05_categoria_produto (
    id SERIAL PRIMARY KEY,
    descricao VARCHAR(100) NOT NULL UNIQUE
);

-- Tabela de Produto
CREATE TABLE t_06_produto (
    id SERIAL PRIMARY KEY,
    id_categoria INTEGER REFERENCES t_05_categoria_produto(id),
    id_funcionario INTEGER REFERENCES t_02_funcionario(id),
    nome VARCHAR(100) NOT NULL,
    unidade INTEGER NOT NULL DEFAULT 1,
    preco DECIMAL(10, 2) NOT NULL,
    descricao TEXT,
    imagem VARCHAR NOT NULL DEFAULT 'produto'
);




-- Tabela de Produção
CREATE TABLE t_11_producao (
    id SERIAL PRIMARY KEY,
	id_produto INT NOT NULL,
	quantidade INT NOT NULL CHECK (quantidade > 0),
    data_producao VARCHAR(20),
	id_funcionario INTEGER REFERENCES t_02_funcionario(id),
    id_cliente INTEGER REFERENCES t_03_cliente(id),
    telefone VARCHAR(20) NOT NULL,
    CONSTRAINT chk_telefone_owner CHECK ((id_funcionario IS NOT NULL AND id_cliente IS NULL) OR (id_funcionario IS NULL AND id_cliente IS NOT NULL)),
    status VARCHAR(60) NOT NULL CHECK (status IN ('Pendente por falta de pagamento','Pendente','Em andamento', 'Concluído', 'Cancelado'))
);


-- Tabela de previsão de capacidade
CREATE TABLE t_13_capacidade (
    id SERIAL PRIMARY KEY,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL DEFAULT 0,
    quantidade_maxima INT NOT NULL DEFAULT 0,
    data_producao TIMESTAMP NOT NULL,
    FOREIGN KEY (id_produto) REFERENCES t_06_produto(id)
);

-- Tabela de comprovativos
CREATE TABLE t_14_comprovativo (
    id SERIAL PRIMARY KEY,
    id_cliente INT NOT NULL,
    id_producao INT NOT NULL,
    data_envio TIMESTAMP NOT NULL,
    estado varchar(50) not null DEFAULT 'Pendente',
    comprovativo TEXT NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES t_03_cliente(id),
    FOREIGN KEY (id_producao) REFERENCES t_11_producao(id)
);

-- Adicionar índices para otimização de consultas
CREATE INDEX idx_funcionario_categoria ON t_02_funcionario(id_categoria);
CREATE INDEX idx_cliente_categoria ON t_03_cliente(id_categoria);
CREATE INDEX idx_telefone_funcionario ON t_04_telefone(id_funcionario);
CREATE INDEX idx_telefone_cliente ON t_04_telefone(id_cliente);
CREATE INDEX idx_produto_categoria ON t_06_produto(id_categoria);
CREATE INDEX idx_produto_funcionario ON t_06_produto(id_funcionario);
